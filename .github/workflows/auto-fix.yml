name: BugFix Agent
on:
  workflow_dispatch: {}
#  pull_request:
#    types: [ opened, edited ]
  issues:
    types: [ opened, labeled ]
  issue_comment:
    types: [ created, edited ]
  # schedule:
  #   - cron: "30 3 * * *"

jobs:
  gate:
    runs-on: ubuntu-latest
    outputs:
      filtered-issues: ${{ steps.filter-issues.outputs.issues }}
    permissions:
      issues: read
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml PyGithub

      - name: Filter issues based on config
        id: filter-issues
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_EVENT_NAME: ${{ github.event_name }}
          GITHUB_EVENT_PATH: ${{ github.event_path }}
        run: python .github/scripts/filter_issues.py

  bugfix:
    needs: gate
    if: ${{ fromJson(needs.gate.outputs.filtered-issues) != '[]' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      packages: read
    steps:
      - uses: actions/checkout@v4

      - name: Pull latest image
        run: docker pull ghcr.io/justingebert/bugfix-ci:latest

      - name: Run agent
        env:
          GITHUB_TOKEN:   ${{ secrets.GITHUB_TOKEN }}
          GITHUB_RUN_ID: ${{ github.run_id }}
          FILTERED_ISSUES: ${{ needs.gate.outputs.filtered-issues }}
        run: |
          docker run --rm \
            -v "$GITHUB_WORKSPACE:/workspace" \
            -e GITHUB_TOKEN -e GITHUB_RUN_ID -e FILTERED_ISSUES \
            ghcr.io/justingebert/bugfix-agent:latest
